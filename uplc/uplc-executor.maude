mod UPLC-EXECUTOR is
    pr UPLC-PROCESS-MODULE .
    pr GRAMMAR .
    pr LEXICAL .
    pr STRING .
    pr UPLC-SEMANTICS .

    op uplcError : -> [Configuration] [ctor] .

    var S : String .
    vars T T' : Term .

    op uplcBubble : -> FModule .
    eq uplcBubble = upModule('UPCL-BUBBLE, false) .

    op uplc : -> FModule .
    eq uplc = upModule('UPLC, false) .

    op uplcSemantics : -> FModule .
    eq uplcSemantics = upModule('UPLC-SEMANTICS, false) .

    op execute : String -> Configuration .
    ceq execute(S) = downTerm(getTerm(metaRewrite(uplcSemantics, T, unbounded)), uplcError)
        if T := configuration(S) .

    op configuration : String -> Term .
    ceq configuration(S) = '__['<>.Portal,'<_:_|_>['program.Oid,'Program.Cid,'_`,_['program:_[T],'step:_['initial.UplcStep]]]]
        if T :=  processMetaProgram(generateMetaProgram(S)) .

    op processMetaProgram : Term -> Term .
    eq processMetaProgram(T) = getTerm(metaReduce(uplcProcessModule(uplc, T), 'program.Program)) .

    op generateMetaProgram : String -> Term .
    eq generateMetaProgram(S) = getTerm(metaParse(uplcBubble, tokenize(S), '@Program@)) .

endm